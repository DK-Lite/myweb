{"version":3,"sources":["components/atoms/Button/Button.js","components/atoms/Table/Table.js","components/atoms/Chart/Chart.js","ducks/Map/actions.js","ducks/Map/types.js","ducks/Analyzer/actions.js","ducks/Analyzer/types.js","utils/api.js","ducks/Map/sagas.js","ducks/Map/reducer.js","components/atoms/Map/Map.js","components/atoms/Card/Card.js","components/atoms/TextField/TextField.js","components/atoms/Icon/Icon.js","components/molecules/CardTable/CardTable.js","components/molecules/CardTable/CardTradeTable.js","components/molecules/CardChart/LineChart.js","components/molecules/CardChart/BarChart.js","components/molecules/CardChart/PieChart.js","components/molecules/IconButton/IconButton.js","components/molecules/Search/Search.js","components/molecules/ControlMap/ControlMap.js","components/organisms/TradeDataArea/TradeDataArea.js","components/organisms/MenuArea/MenuArea.js","components/organisms/AnalyArea/AnalyArea.js","components/organisms/Nav/SearchNav.js","components/organisms/Nav/SettingNav.js","components/organisms/Nav/Nav.js","components/organisms/AnalyMenu/AnalyMenu.js","components/organisms/ControlButton/ControlButton.js","pages/MainPage/template/Template.js","pages/MainPage/Page.js","App.js","serviceWorker.js","ducks/Template/types.js","ducks/Template/reducer.js","ducks/Analyzer/reducer.js","ducks/reducer.js","ducks/saga.js","index.js"],"names":["Container","styled","div","Button","children","other","CustomDiv","CustomTable","HeaderRow","Row","Cell","Table","colums","datas","header_line","map","object","name","data_lines","data","tag","defaultProps","no","tiger","etfName","curPrice","yearDivid","dividDate","dividRevenue","dataCycle","operatingAssets","operatingRepair","LisingDate","connect","state","analyzer","type","options","style","tradeMeanChartData","chartContainer","useRef","useState","chartInstance","setChartInstance","paramter","datasets","label","trans","str","month","substring","slice","console","log","useEffect","datasetIndex","newData","trade","x","_id","day","y","value","update","current","newChartInstance","Chart","ref","updateApt","payload","updateAptChart","loadAptInfos","setAptInfos","updateTradeTable","updateTradeMeanChart","instance","create","updateAptSaga","updateAptChartSaga","loadAptInfoSaga","watchSaga","action","call","post","put","analyActions","info","get","mapActions","error","takeLatest","takeEvery","init","stateExample","apartInfos","reducer","CustomMap","props","el","document","getElementById","positions","title","aptName","latlng","kakao","maps","LatLng","latitudes","longitude","roadCityCode","roadCode","imageSize","Size","markerImage","MarkerImage","kakaoMap","Map","center","i","length","marker","Marker","position","image","content","uniqueKey","event","addListener","className","id","StyledCard","Card","input","TextField","Icon","h3","CardTable","Contents","pad","n","width","Array","join","height","tradeTableData","dataName","dataLists","ymd","tradeYear","tradeMonth","tradeDay","tradeValue","area","dedicatedArea","maxBodyHeight","zIndex","columns","field","filtering","pageSize","pageSizeOptions","search","showFirstLastPageButtons","sorting","Title","scales","xAxes","ticks","callback","index","values","scaleLabel","display","labelString","yAxes","IconButton","alignItems","justifyContent","Search","placeholder","ContainerIcons","ControlMap","icons","key","SearchNav","SettingNav","SettingContainer","Nav","ContainerAnaly","AnalyMenu","ControlButton","ContainerNav","ContainerContents","Template","Page","App","Boolean","window","location","hostname","match","EXAMPLE","types","rootReducer","combineReducers","template","combineSagas","sagas","rootSaga","all","reduce","prevSagas","saga","Object","keys","fork","templateSaga","mapSaga","analyzerSaga","devTools","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","sagaMiddleware","createSagaMiddleware","ReactDOM","render","store","createStore","applyMiddleware","run","makedStore","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.fc1f6e44.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    width: 30px;\r\n    height: 30px;\r\n\r\n    display: flex;\r\n    outline: none;\r\n    text-align: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    color: #0005;\r\n    background: white;\r\n    border: 1px solid #0005;\r\n    border-radius: 3px;\r\n    font-size: 20px;\r\n    font-family: 'Poppins-Regular';\r\n    opacity: 0.5;\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n    &:active {\r\n        color: white;\r\n        background: #0005;\r\n        border: 1px solid white;\r\n    }\r\n`\r\n\r\nfunction Button({ children, ...other }){\r\n    return (\r\n        <Container {...other}>\r\n            {children}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst CustomDiv = styled.div`\r\n    display: flex;\r\n    width: 400px;\r\n    float: left;\r\n`\r\nconst CustomTable = styled.div`\r\n    display: table;\r\n    width: 100%;\r\n`\r\nconst HeaderRow = styled.div`\r\n    display: table-row;\r\n\r\n    height: 40px;\r\n\r\n    background: rgba(171, 177, 197, 1);\r\n    background: rgba(255, 255, 255, 1);\r\n\r\n    color : rgba(0, 0, 0, .5);\r\n    font-size: 15px;\r\n    font-weight: normal;\r\n\r\n    > div:first-child {\r\n        border-radius: 5px 0 0 0;\r\n        -moz-border-radius: 5px 0 0 0;\r\n    }\r\n    > div:last-child {\r\n        border-radius: 0 5px 0 0; \r\n        -moz-border-radius: 0 5px 0 0;\r\n    }\r\n`\r\nconst Row = styled.div`\r\n    display: table-row;\r\n    color : rgba(0, 0, 0, .8);\r\n    background: rgba(255, 255, 255, 1);\r\n    font-size: 15px;\r\n    > *{\r\n        border-bottom: 0.5px solid rgba(0, 0, 0, .3);\r\n    }\r\n    &:hover {\r\n        background: rgba(126, 210, 255, .3);\r\n        background: rgba(171, 177, 197, .3);\r\n        > *{\r\n        border-bottom: 0.5px solid rgb(255, 255, 255);\r\n        }\r\n    }\r\n    :last-child > *{\r\n        border-bottom: 0px solid rgba(0, 0, 0, .3);\r\n    }\r\n    :last-child > div:first-child {\r\n        border-radius: 0 0 0 5px;\r\n        -moz-border-radius: 0 0 0 5px;\r\n    }\r\n    :last-child  > div:last-child {\r\n        border-radius: 0 0 5px 0;\r\n        -moz-border-radius: 0 0 5px 0;\r\n    }\r\n`\r\nconst Cell = styled.div`\r\n    display: table-cell;\r\n    height: 50px;\r\n    line-height: 50px;\r\n    text-align: center;\r\n    padding: 0 10px 0 10px;\r\n`\r\n\r\nfunction Table({ colums, datas, ...other }){\r\n\r\n    const header_line = colums.map( object => (\r\n            <Cell >{object.name}</Cell>\r\n    ))\r\n    const data_lines = datas.map( data => \r\n        <Row>\r\n            {colums.map( object =>  (<Cell> {data[object.tag]}</Cell>)) }\r\n        </Row>\r\n    )\r\n\r\n    return (\r\n        <CustomDiv {...other}> \r\n            <CustomTable>\r\n                <HeaderRow>\r\n                    {header_line}\r\n                </HeaderRow>\r\n                {data_lines}\r\n            </CustomTable>\r\n        </CustomDiv>\r\n        \r\n    )\r\n}\r\n\r\nTable.defaultProps = {\r\n    colums: [\r\n        { name: 'No', tag:'no' },\r\n        { name: '티거', tag:'tiger' },\r\n        { name: 'ETF Name', tag:'etfName' },\r\n        { name: '현재주가', tag:'curPrice' },\r\n        { name: '연간배당금', tag:'yearDivid' },\r\n        { name: '배당지급일', tag:'dividDate' },\r\n        { name: '배당수익률', tag:'dividRevenue' },\r\n        { name: '지급주기', tag:'dataCycle' },\r\n        { name: '운용자산', tag:'operatingAssets' },\r\n        { name: '운용보수', tag:'operatingRepair' },\r\n        { name: '상장일', tag:'LisingDate' }\r\n    ],\r\n    datas: [\r\n        {no:\"1\", tiger:'PFF', etfName:'iSshares Preferred...', curPrice:'$37.81', yearDivid:'$2.00', dividDate:'19.12.19', dividRevenue:'5.32%', dataCycle:'월배당', operatingAssets:'$17,014.28', operatingRepair:'0.46%', LisingDate:'07.03.30'},\r\n        {no:\"2\", tiger:'PFF', etfName:'iSshares Preferred...', curPrice:'$37.81', yearDivid:'$2.00', dividDate:'19.12.19', dividRevenue:'5.32%', dataCycle:'월배당', operatingAssets:'$17,014.28', operatingRepair:'0.46%', LisingDate:'07.03.30'},\r\n        {no:\"3\", tiger:'PFF', etfName:'iSshares Preferred...', curPrice:'$37.81', yearDivid:'$2.00', dividDate:'19.12.19', dividRevenue:'5.32%', dataCycle:'월배당', operatingAssets:'$17,014.28', operatingRepair:'0.46%', LisingDate:'07.03.30'},\r\n        {no:\"4\", tiger:'PFF', etfName:'iSshares Preferred...', curPrice:'$37.81', yearDivid:'$2.00', dividDate:'19.12.19', dividRevenue:'5.32%', dataCycle:'월배당', operatingAssets:'$17,014.28', operatingRepair:'0.46%', LisingDate:'07.03.30'},\r\n    ],\r\n}\r\n\r\nexport default Table;","import React, { useRef, useEffect, useState } from 'react'\r\nimport Chart from 'chart.js'\r\nimport { connect } from 'react-redux'; //Redux Main\r\n\r\nfunction ChartTemplate({type, options, style, tradeMeanChartData}) {\r\n\r\n    const chartContainer = useRef();\r\n    const [chartInstance, setChartInstance] = useState(null);\r\n    const paramter = {\r\n        type: type,\r\n        data: {\r\n            datasets: [{\r\n            label: \"trade\",\r\n            data: [],\r\n            }],\r\n        },\r\n        options: options\r\n    }\r\n\r\n    const updateDataset = (datasetIndex, newData) => {\r\n        if(chartInstance == null) return\r\n\r\n        console.log(newData)\r\n        chartInstance.data.datasets[datasetIndex].data = newData;\r\n        chartInstance.update();\r\n    };\r\n\r\n    const trans = (str) => {\r\n        let month = str.substring(4, 6)\r\n\r\n        month = \"00\" + month;\r\n        month = month.slice(-2);\r\n\r\n        console.log(str.substring(0, 4) + month)\r\n        return str.substring(0, 4) +\"-\"+ month\r\n\r\n    }\r\n    const onUpdate = () => {\r\n        const data = tradeMeanChartData.map(trade => ({\r\n            x: trans(trade._id.day),\r\n            y: trade.value\r\n        }))\r\n        updateDataset(0, data);\r\n    };\r\n\r\n    function InitChart(){\r\n        if(chartContainer && chartContainer.current) {\r\n            const newChartInstance = new Chart(chartContainer.current, paramter);\r\n            setChartInstance(newChartInstance);\r\n        }\r\n    }\r\n\r\n    useEffect(onUpdate, [tradeMeanChartData])\r\n    useEffect(InitChart, [chartContainer]);\r\n    \r\n    return (\r\n        <div>\r\n            <canvas  \r\n                style= {style} \r\n                ref={chartContainer} />\r\n        </div>\r\n    )\r\n}\r\nexport default connect(\r\n\t// state => ({\t\r\n\t// \tdata: selectors.getTradeTable(state),\r\n    // }), \r\n    state => state.analyzer,\r\n)(ChartTemplate)\r\n//export default ChartTemplate;\r\n","import * as types from './types'\r\n\r\nexport const updateApt = (data) => ({\r\n    type: types.UPDATE_APT,\r\n    payload: data,  \r\n})\r\n\r\nexport const updateAptChart = (data) => ({\r\n    type: types.UPDATE_APT_CHART,\r\n    payload: data,\r\n})\r\n\r\nexport const loadAptInfos = (data) => ({\r\n    type: types.LOAD_APT_INFOS,\r\n    payload: data,  \r\n})\r\n\r\nexport const setAptInfos = (data) => ({\r\n    type: types.SET_APT_INFOS,\r\n    payload: data,\r\n})","export const UPDATE_APT = \"@map/updateApt\"\r\nexport const UPDATE_APT_CHART = \"@map/updataAptChart\"\r\nexport const LOAD_APT_INFOS = \"@map/loadAptInfos\"\r\nexport const SET_APT_INFOS = '@map/setAptInfos'\r\n","import * as types from './types'\r\n\r\nexport const updateTradeTable = (data) => ({\r\n    type: types.UPDATE_TRADE_TABLE,\r\n    payload: data,  \r\n})\r\n\r\nexport const updateTradeMeanChart = (data) => ({\r\n    type: types.UPDATE_TRADE_MEAN_CHART,\r\n    payload: data,  \r\n})","export const UPDATE_TRADE_TABLE = '@analyzer/updateTradeTable'\r\nexport const UPDATE_TRADE_MEAN_CHART = '@analyzer/updateTradeMeanChart'","import { create, request } from 'axios';\r\n\r\nconst timeout = 250000;\r\nconst config = {\r\n    timeout,\r\n    headers: { 'Content-Type':'application/json'},\r\n}\r\nexport const api = (options = {} ) => request( {...config, ...options});\r\nexport const instance = create();","import {call, put, takeEvery, takeLatest} from 'redux-saga/effects'\r\nimport * as types from './types'\r\nimport * as mapActions from './actions'\r\nimport * as analyActions from 'ducks/Analyzer/actions'\r\nimport { instance } from 'utils/api'\r\n\r\n\r\nfunction* updateAptSaga(action){\r\n    try{\r\n        const { data } = yield call(instance.post, \"/apiii/data-warehouse/apt-unique-info/apt-info\", action.payload)\r\n        yield put(analyActions.updateTradeTable(data.info))\r\n        //const data = yield call(instance.post, \"host:port\", action.payload)\r\n        //yield put(templateActions.success)\r\n    } catch (e){\r\n        //console.error(e);\r\n        //yield put(templateActions.fail)\r\n    }\r\n}\r\n\r\n\r\n\r\n//     labels: [\"2019-11\", \"2019-12\", \"2020-01\"],\r\n//     datasets: [\r\n//         {\r\n//             label: \"86.3m\",\r\n//             data: [82500, 90000, 100000],\r\n//             backgroundColor: [\r\n//                 'rgba(255, 99, 132, 0)',\r\n//             ],\r\n//             borderColor: [\r\n//                 'rgba(255,99,132,1)',\r\n//             ],\r\n//             borderWidth: 3\r\n//         },\r\n\r\n// {\r\n//     _id: {area: \"60.45\", day: \"2019-10\"}\r\n//     aptName: \"20411\"\r\n//     roadCityCode: \"11110\"\r\n//     roadCode: \"3100021\"\r\n//     value: 41000\r\n// }\r\n\r\n\r\n// output.labels\r\n\r\n// data.info.map( x => (\r\n//     output.labels.appand(x._id.day)\r\n//     output.datasets.appand(x._id.day)\r\n// data.info.sort(function(a, b) {\r\n//  \r\n//});\r\n\r\n// ))\r\n\r\n\r\nfunction* updateAptChartSaga(action){\r\n    try{\r\n        const { data } = yield call(instance.post, \"/api/data-mart/apt-trade-month-avg/apt-info\", action.payload)\r\n\r\n        yield put(analyActions.updateTradeMeanChart(data.info))\r\n\r\n    } catch (e){\r\n        //console.error(e);\r\n    }\r\n}\r\n\r\n\r\n\r\nfunction* loadAptInfoSaga(){\r\n    try{\r\n        const { data } = yield call(instance.get, \"/api/data-warehouse/apt-unique-info\")\r\n        yield put(mapActions.setAptInfos(data.info))\r\n    } catch (e){\r\n        console.error(e);\r\n        //yield put(templateActions.fail)\r\n    }\r\n}\r\n\r\nexport function* watchSaga(){\r\n    yield takeLatest(types.UPDATE_APT, updateAptSaga);\r\n    yield takeLatest(types.UPDATE_APT_CHART, updateAptChartSaga);\r\n    yield takeEvery(types.LOAD_APT_INFOS, loadAptInfoSaga);\r\n}","import * as types from './types'\r\n\r\nconst init = {\r\n    stateExample: \"null\",\r\n    apartInfos : [],\r\n}\r\n\r\nfunction reducer(state=init, action){\r\n\r\n    switch(action.type){\r\n        \r\n        case types.SET_APT_INFOS:\r\n            return {\r\n                ...state,\r\n                apartInfos: action.payload,\r\n            }\r\n        case types.UPDATE_APT:\r\n            console.log(\"reducer : success\")\r\n            return {\r\n                ...state,\r\n                stateExample: action.payload,\r\n            }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default reducer;","import React, { useEffect } from 'react';\r\nimport styled from 'styled-components'\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\nimport { actions as mapActions } from 'ducks/Map';\r\n\r\ndeclare var kakao:any;\r\n\r\nconst CustomMap = styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    position: absolute;\r\n    z-index: 0;\r\n`\r\n\r\n// const el = document.getElementById('map');\r\n// var kakaoMap = new kakao.maps.Map(el, {\r\n//     center: new kakao.maps.LatLng(37.563642596447494, 127.0260017409586),\r\n// });\r\n\r\n\r\n// export const setCenter= () => {            \r\n//     // 이동할 위도 경도 위치를 생성합니다 \r\n//     var moveLatLon = new kakao.maps.LatLng(33.452613, 126.570888);\r\n//     // 지도 중심을 이동 시킵니다\r\n//     kakaoMap.setCenter(moveLatLon);\r\n// }\r\n\r\n\r\nfunction Map(props){\r\n    const { apartInfos } = props\r\n    const { loadAptInfos, updateApt, updateAptChart } = props // actions\r\n    \r\n    useEffect(loadAptInfos,[])\r\n    useEffect(CreateMap,[apartInfos])\r\n\r\n    function CreateMap(){\r\n\r\n        const el = document.getElementById('map');\r\n        \r\n        const positions = apartInfos.map( data => ({ \r\n            title: data.aptName,\r\n            latlng: new kakao.maps.LatLng(data.latitudes, data.longitude),\r\n            roadCityCode: data.roadCityCode,\r\n            roadCode: data.roadCode,\r\n            aptName: data.aptName,\r\n        }))\r\n         \r\n        var imageSrc = \"http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_red.png\"; \r\n        var imageSize = new kakao.maps.Size(35, 35);\r\n          \r\n        // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\r\n        var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize)\r\n        \r\n        var kakaoMap = new kakao.maps.Map(el, {\r\n            center: new kakao.maps.LatLng(37.563642596447494, 127.0260017409586),\r\n        });\r\n    \r\n        for(var i = 0; i < positions.length; i ++) {\r\n            var marker = new kakao.maps.Marker({\r\n                map: kakaoMap, // 마커를 표시할 지도\r\n                position: positions[i].latlng,\r\n                title : positions[i].title,\r\n                image : markerImage,  \r\n                content: positions[i].roadCityCode, \r\n    \r\n            });\r\n            var uniqueKey = ({\r\n                roadCityCode: positions[i].roadCityCode,\r\n                roadCode : positions[i].roadCode,\r\n                aptName : positions[i].aptName,\r\n            });\r\n\r\n            // marker click event\r\n            (function(marker, uniqueKey) {\r\n                kakao.maps.event.addListener(marker, 'click', function() {\r\n                    updateApt(uniqueKey)\r\n                    updateAptChart(uniqueKey)\r\n                });\r\n            })(marker, uniqueKey);\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <CustomMap className='Map' id=\"map\" />\r\n    )\r\n\r\n}\r\n\r\nexport default connect(\r\n    state => state.map,\r\n    mapActions\r\n)(Map);\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nconst StyledCard = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    border-radius: 0px;\r\n    &:hover {\r\n        box-shadow: 0px 0px 5px 1px gray;\r\n    }\r\n    background: #FFFFFF;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n`\r\n\r\nfunction Card({ children, ...other }){\r\n\r\n    return(\r\n        <StyledCard {...other}>\r\n            {children}\r\n        </StyledCard>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.input`\r\n    width: 200px;\r\n    height: 30px;\r\n\r\n    outline: none;\r\n    color: black;\r\n    background: white;\r\n    border: 1px solid #0005;\r\n    border-radius: 3px;\r\n    opacity: 0.5;\r\n    font-size: 13px;\r\n    padding: 0 0 0 10px;\r\n\r\n    ::placeholder {\r\n    }\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n    &:focus {\r\n        opacity: 1;\r\n    }\r\n`\r\n\r\nfunction TextField({ children, ...other }){\r\n    return (\r\n        <Container {...other}>\r\n            {children}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TextField","import React from 'react' \r\nimport styled from 'styled-components'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\nfunction Icon({name, ...other}){\r\n    return (\r\n        <Container>\r\n               <i className=\"material-icons\"> {name} </i>    \r\n        </Container>\r\n    )\r\n}\r\nIcon.defaultProps = {\r\n}\r\n\r\nexport default Icon;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { Table } from 'components/atoms'\r\n\r\n\r\n//import { LineGraph } from '../Chart'\r\n\r\n\r\nconst StyledCard = styled.div`\r\n    width: 400px;\r\n    height: 300px;\r\n    border: 0.5px solid #6663;\r\n    &:hover {\r\n        box-shadow: 1px 1px 2px 1px gray;\r\n    }\r\n    background: #FFFFFF;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    padding: 5px 5px 5px 5px;\r\n`\r\n\r\nconst Title = styled.h3`\r\n    display: flex;\r\n    flex: 1;\r\n    height: 20px;\r\n    box-shadow: 0px 0px 0px 0px gray;\r\n    margin: 5px 5px 5px 5px;\r\n    font-family: Nanum Gothic;\r\n`\r\n//Samsung Sans,roboto,sans-serif\r\n\r\nconst Contents = styled.div`\r\n    display: flex;\r\n    height: 230px;\r\n    background : white;\r\n    padding: 10px 5px 10px 5px;\r\n`\r\n\r\nfunction CardTable(props) {\r\n\r\n    const { width, height, ...other } = props;\r\n\r\n    return(\r\n        <StyledCard\r\n            style= {{\r\n                width: width,\r\n                height: height,\r\n                ...other\r\n            }}>\r\n            <Title>실거래 데이터</Title>\r\n\r\n            <Contents>\r\n                <Table \r\n                     colums={[\r\n                        {name: '날짜', tag : 'a'},\r\n                        {name: '크기', tag : 'b'},\r\n                        {name: '가격', tag : 'c'},\r\n                        {name: '구분', tag : 'd'},\r\n                    ]}\r\n                    datas={[\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                    ]}/>\r\n            </Contents>\r\n            \r\n        </StyledCard>\r\n    )\r\n\r\n};\r\n\r\nexport default CardTable;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'; //Redux Main\r\n//import { createStructuredSelector } from 'reselect'; // no selectors.js \r\n//import * as selectors from 'ducks/Analyzer/selectors'\r\n\r\nimport MaterialTable from 'material-table';\r\n\r\nconst StyledCard = styled.div`\r\n    width: 400px;\r\n    height: 450px;\r\n    border: 0.5px solid #6663;\r\n    &:hover {\r\n        box-shadow: 1px 1px 2px 1px gray;\r\n    }\r\n    background: #FFFFFF;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    padding: 5px 5px 5px 5px;\r\n`\r\n\r\nconst Contents = styled.div`\r\n    display: flex;\r\n    height: 430px;\r\n    background : white;\r\n    padding: 10px 5px 10px 5px;\r\n`\r\n\r\n\r\nfunction pad(n, width) {\r\n    n = n + '';\r\n    return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\r\n  }\r\n\r\n\r\nfunction CardTradeTable(props) {\r\n\r\n    const { width, height, tradeTableData, ...other } = props;\r\n\r\n\r\n    let dataName = \"\";\r\n    if (tradeTableData.length > 0){\r\n        dataName = tradeTableData[0].aptName;\r\n    }\r\n\r\n    const dataLists = tradeTableData.map( x => \r\n        ({\r\n            ymd: x.tradeYear+\"-\"+pad(x.tradeMonth, 2)+\"-\"+pad(x.tradeDay, 2),\r\n            value: x.tradeValue,\r\n            area: x.dedicatedArea,\r\n        }))\r\n\r\n\r\n    return(\r\n        <StyledCard\r\n            style= {{\r\n                width: width,\r\n                height: height,\r\n                ...other\r\n            }}>\r\n            {/* <Title>실거래 데이터</Title> */}\r\n            \r\n            <Contents>\r\n\r\n                <MaterialTable\r\n                    maxBodyHeight='100%'\r\n                    style={{ width: '390px', height: '100%', zIndex: 0}}\r\n                    title={dataName}\r\n                    columns={[\r\n                        { title: 'Date', field: 'ymd' },\r\n                        { title: 'Price', field: 'value' },\r\n                        { title: 'Area', field: 'area' },\r\n                    ]}\r\n                    data={dataLists}\r\n                    options={{\r\n                        filtering: false,\r\n                        pageSize:5,\r\n                        pageSizeOptions: [5],\r\n                        search: false,\r\n                        showFirstLastPageButtons: false,\r\n                        sorting: true,\r\n                }}      \r\n                />\r\n\r\n                {/* <Table \r\n                     colums={[\r\n                        {name: '날짜', tag : 'a'},\r\n                        {name: '크기', tag : 'b'},\r\n                        {name: '가격', tag : 'c'},\r\n                        {name: '구분', tag : 'd'},\r\n                    ]}\r\n                    datas={[\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                        {a: '1919.11.01', b: '84m', c: \"10000\", d: '-'},\r\n                    ]}/> */}\r\n\r\n\r\n            </Contents>\r\n            \r\n        </StyledCard>\r\n    )\r\n\r\n};\r\n\r\n\r\nexport default connect(\r\n\t// state => ({\t\r\n\t// \tdata: selectors.getTradeTable(state),\r\n    // }), \r\n    state => state.analyzer,\r\n)(CardTradeTable)","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { connect } from 'react-redux'; //Redux Main\r\n\r\nimport { ChartTemplate } from 'components/atoms'\r\n\r\n\r\n\r\nconst StyledCard = styled.div`\r\n    width: 400px;\r\n    height: 300px;\r\n    border: 0.5px solid #6663;\r\n    &:hover {\r\n        box-shadow: 1px 1px 2px 1px gray;\r\n    }\r\n    background: #FFFFFF;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    padding: 5px 5px 5px 5px;\r\n`\r\n\r\nconst Title = styled.h3`\r\n    display: flex;\r\n    flex: 1;\r\n    height: 20px;\r\n    box-shadow: 0px 0px 0px 0px gray;\r\n    margin: 5px 5px 5px 5px;\r\n    font-family: Nanum Gothic;\r\n`\r\n\r\nconst Contents = styled.div`\r\n    display: flex;\r\n    height: 230px;\r\n    background : white;\r\n    padding: 10px 5px 10px 5px;\r\n`\r\n\r\n\r\n\r\n// {\r\n//     date: \"2019-11\"\r\n//     data = [\r\n//         {\r\n//             area: \"86.3m\",\r\n//             data: 82500,\r\n//         },\r\n//         {\r\n//             area: \"59.3m\",\r\n//             data: 52310,\r\n//         },\r\n//     ]\r\n// }\r\n\r\nfunction parse(str) {\r\n    var y = str.substr(0, 4);\r\n    var m = str.substr(4, 2);\r\n    return new Date(y,m-1);\r\n}\r\nvar scatterChartData = {\r\n    datasets: [{\r\n      label: \"My First dataset\",\r\n      data: [\r\n        {\r\n            x: \"201907\",\r\n            y: 4\r\n        }, \r\n        {\r\n            x: \"201906\",\r\n            y: 6\r\n        }, \r\n        {\r\n            x: \"201905\",\r\n            y: 8\r\n        }, \r\n        {\r\n            x: \"201909\",\r\n            y: 9\r\n        }, \r\n        {\r\n            x: \"201910\",\r\n            y: 10\r\n        }, \r\n        {\r\n            x: \"201911\",\r\n            y: 5\r\n        }]\r\n    }]\r\n  };\r\n\r\n\r\nfunction CardChart(props) {\r\n\r\n    const { width, height, ...other } = props;\r\n\r\n    return(\r\n        <StyledCard\r\n            style= {{\r\n                width: width,\r\n                height: height,\r\n                ...other\r\n            }}>\r\n            <Title>실거래 차트</Title>\r\n            {/*  datalist.labels\r\n            datalist.meanPrices*/}\r\n            <Contents>\r\n                <ChartTemplate\r\n                    type='scatter'\r\n                    style={\r\n                        { width:'380px', height:'100%'}\r\n                    }\r\n                    options= {{\r\n                        scales: {\r\n                          xAxes: [{\r\n                            position: 'bottom',\r\n                            ticks: {\r\n                                callback: function(value, index, values) {\r\n\r\n                                    return value\r\n                                    let str = String(value)\r\n                                    console.log(str)\r\n                                    return str.substring(0,4) + \"-\" + str.substring(4,6);\r\n                                },\r\n                            },\r\n                            scaleLabel: {\r\n                              display: true,\r\n                              labelString: 'Day'\r\n                            }\r\n                          }],\r\n\r\n                          yAxes: [{\r\n                            position: 'left',\r\n                            scaleLabel: {\r\n                              display: true,\r\n                              labelString: 'y axis'\r\n                            }\r\n                          }]\r\n                        }\r\n                    }}\r\n                ></ChartTemplate>\r\n            </Contents>\r\n            \r\n        </StyledCard>\r\n    )\r\n\r\n};\r\nexport default connect(\r\n\t// state => ({\t\r\n\t// \tdata: selectors.getTradeTable(state),\r\n    // }), \r\n    state => state.analyzer,\r\n)(CardChart)","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChartTemplate } from 'components/atoms'\r\n\r\n\r\n\r\nconst StyledCard = styled.div`\r\n    width: 400px;\r\n    height: 300px;\r\n    border: 0.5px solid #6663;\r\n    &:hover {\r\n        box-shadow: 1px 1px 2px 1px gray;\r\n    }\r\n    background: #FFFFFF;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    padding: 5px 5px 5px 5px;\r\n`\r\n\r\nconst Title = styled.h3`\r\n    display: flex;\r\n    flex: 1;\r\n    height: 20px;\r\n    box-shadow: 0px 0px 0px 0px gray;\r\n    margin: 5px 5px 5px 5px;\r\n    font-family: Nanum Gothic;\r\n`\r\n\r\nconst Contents = styled.div`\r\n    display: flex;\r\n    height: 230px;\r\n    background : white;\r\n    padding: 10px 5px 10px 5px;\r\n`\r\n\r\n\r\nfunction CardChart(props) {\r\n\r\n    const { width, height, ...other } = props;\r\n\r\n    return(\r\n        <StyledCard\r\n            style= {{\r\n                width: width,\r\n                height: height,\r\n                ...other\r\n            }}>\r\n            <Title>실시간 차트</Title>\r\n\r\n            <Contents>\r\n                <ChartTemplate\r\n                    type='bar'\r\n                    data={{\r\n                        labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n                        datasets: [{\r\n                            label: '# of Votes',\r\n                            data: [12, 19, 3, 5, 2, 3],\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 0.2)',\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                                'rgba(255, 206, 86, 0.2)',\r\n                                'rgba(75, 192, 192, 0.2)',\r\n                                'rgba(153, 102, 255, 0.2)',\r\n                                'rgba(255, 159, 64, 0.2)'\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(255,99,132,1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                                'rgba(153, 102, 255, 1)',\r\n                                'rgba(255, 159, 64, 1)'\r\n                            ],\r\n                            borderWidth: 1\r\n                        }]\r\n                    }}\r\n                    style={\r\n                        { width:'380px', height:'100%'}\r\n                    }\r\n                ></ChartTemplate>\r\n            </Contents>\r\n            \r\n        </StyledCard>\r\n    )\r\n\r\n};\r\n\r\nexport default CardChart;","import React from 'react'\r\nimport styled from 'styled-components'\r\nimport { ChartTemplate } from 'components/atoms'\r\n\r\n\r\n\r\nconst StyledCard = styled.div`\r\n    width: 400px;\r\n    height: 300px;\r\n    border: 0.5px solid #6663;\r\n    &:hover {\r\n        box-shadow: 1px 1px 2px 1px gray;\r\n    }\r\n    background: #FFFFFF;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    padding: 5px 5px 5px 5px;\r\n`\r\n\r\nconst Title = styled.h3`\r\n    display: flex;\r\n    flex: 1;\r\n    height: 20px;\r\n    box-shadow: 0px 0px 0px 0px gray;\r\n    margin: 5px 5px 5px 5px;\r\n    font-family: Nanum Gothic;\r\n`\r\n\r\nconst Contents = styled.div`\r\n    display: flex;\r\n    height: 230px;\r\n    background : white;\r\n    padding: 10px 5px 10px 5px;\r\n`\r\n\r\n\r\nfunction PieChart(props) {\r\n\r\n    const { width, height, ...other } = props;\r\n\r\n    return(\r\n        <StyledCard\r\n            style= {{\r\n                width: width,\r\n                height: height,\r\n                ...other\r\n            }}>\r\n            <Title>실거래 추세</Title>\r\n\r\n            <Contents>\r\n                <ChartTemplate\r\n                    type='pie'\r\n                    data={{\r\n                        labels: [\"Red\", \"Blue\", \"Yellow\", \"Green\", \"Purple\", \"Orange\"],\r\n                        datasets: [{\r\n                            label: '# of Votes',\r\n                            data: [12, 19, 3, 5, 2, 3],\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 0.2)',\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                                'rgba(255, 206, 86, 0.2)',\r\n                                'rgba(75, 192, 192, 0.2)',\r\n                                'rgba(153, 102, 255, 0.2)',\r\n                                'rgba(255, 159, 64, 0.2)'\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(255,99,132,1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                                'rgba(153, 102, 255, 1)',\r\n                                'rgba(255, 159, 64, 1)'\r\n                            ],\r\n                            borderWidth: 1\r\n                        }]\r\n                    }}\r\n                    style={\r\n                        { width:'380px', height:'100%'}\r\n                    }\r\n                ></ChartTemplate>\r\n            </Contents>\r\n            \r\n        </StyledCard>\r\n    )\r\n\r\n};\r\n\r\nexport default PieChart;","import React from 'react' \r\nimport styled from 'styled-components'\r\n\r\nimport * as Tag from 'components/atoms'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 50px;\r\n    height: 50px;\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n`\r\nfunction IconButton({name, ...other}){\r\n    return (\r\n        <Container>\r\n            <Tag.Card style={{alignItems: 'center', justifyContent: 'center'}}>\r\n                <Tag.Icon name={name} />\r\n            </Tag.Card>\r\n        </Container>\r\n    )\r\n}\r\nIconButton.defaultProps = {\r\n}\r\n\r\nexport default IconButton;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport * as Tag from 'components/atoms'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: rows;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    > * {\r\n        margin: 0 2px 0 2px;\r\n    }\r\n`\r\n\r\nfunction Search(){\r\n    return (\r\n        <Container>\r\n            <Tag.TextField placeholder='search...'/>\r\n            <Tag.Button><Tag.Icon name='search'/></Tag.Button>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Search;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport * as Tag from 'components/atoms'\r\nimport * as HighTag from 'components/molecules'\r\n\r\nconst Container = styled.div`\r\n    display:flex;\r\n    width: 100%;\r\n    justify-content: flex-end;\r\n    flex-direction: rows;\r\n    flex-wrap: wrap;\r\n`\r\nconst ContainerIcons = styled.div`\r\n    display: flex;\r\n    min-height: 100vh;\r\n    justify-content: flex-end;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    position: absolute;\r\n    z-index: 0;\r\n    > * {\r\n        margin: 5px 5px 5px 5px;\r\n    }\r\n`\r\n\r\nfunction ControlMap({icons, ...other}){\r\n    return (\r\n        <Container>\r\n            <Tag.Map />\r\n            <ContainerIcons>\r\n                {icons.map( (x,i) => <HighTag.IconButton key={i} name={x} />)}\r\n            </ContainerIcons>\r\n        </Container>\r\n    )\r\n}\r\nControlMap.defaultProps = {\r\n    icons: ['add', 'remove',]\r\n}\r\nexport default ControlMap;\r\n","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport { CardTradeTable } from 'components/molecules'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    width: 100%\r\n    justify-content: flex-start;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    padding: 0px 10px 0px 10px;\r\n`\r\nconst Item = styled.div`\r\n    display: flex;\r\n    margin: 0px 10px 10px 0px;\r\n`\r\nfunction TradeDataArea(){\r\n\r\n    return(\r\n        <Container>\r\n            <Item>\r\n                <CardTradeTable/>\r\n            </Item>\r\n            {/* <Item>\r\n                <LineChart/>\r\n            </Item>\r\n            <Item>\r\n                <BarChart/>\r\n            </Item>\r\n            <Item>\r\n                <PieChart/>\r\n            </Item> */}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default TradeDataArea;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\n\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 30px;\r\n    background: #000624;\r\n    padding: 0px 0px 0px 20px;\r\n    position: fixed;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    z-index: 1;\r\n`\r\nconst Item = styled.div`\r\n    display: flex;\r\n`\r\n\r\nfunction MenuArea(){\r\n\r\n    return(\r\n        <Container>\r\n            <Item></Item>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default MenuArea;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nimport { BarChart, PieChart } from 'components/molecules'\r\n\r\nconst Container = styled.div`\r\n    width: 700px;\r\n    height: 100%;\r\n    background: #FFFFFF;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: flex-start;\r\n    padding: 0px 10px 0px 10px;\r\n`\r\nconst Item = styled.div`\r\n    display: flex;\r\n    margin: 0px 0px 10px 0px;\r\n`\r\nfunction AnalyArea(){\r\n\r\n    return(\r\n        <Container>\r\n            <Item>\r\n                <BarChart/>\r\n            </Item>\r\n            <Item>\r\n                <PieChart/>\r\n            </Item>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default AnalyArea;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport * as HighTag from 'components/molecules'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: rows;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    > * {\r\n        margin: 0 2px 0 2px;\r\n    }\r\n`\r\nfunction SearchNav({icons, ...other}){\r\n    return (\r\n        <Container>\r\n            <HighTag.Search />\r\n        </Container>\r\n    )\r\n}\r\n\r\nSearchNav.defaultProps = {\r\n\r\n}\r\n\r\nexport default SearchNav;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport * as HighTag from 'components/molecules'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: rows;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    > * {\r\n        margin: 0 2px 0 2px;\r\n    }\r\n`\r\nfunction SettingNav({icons, ...other}){\r\n    return (\r\n        <Container>\r\n            {icons.map( (x,i) => <HighTag.IconButton key={i} name={x} />)}\r\n        </Container>\r\n    )\r\n}\r\nSettingNav.defaultProps = {\r\n    icons: ['list', 'settings']\r\n}\r\n\r\nexport default SettingNav;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport * as HighTag from 'components/molecules'\r\nimport SearchNav from './SearchNav'\r\nimport SettingNav from './SettingNav'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    flex-direction: rows;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n`\r\nconst SettingContainer = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    > * {\r\n        margin: 0 2px 0 2px;\r\n    }\r\n`\r\n\r\nfunction Nav({icons, ...other}){\r\n    return (\r\n        <Container>\r\n            <SettingContainer>\r\n                \r\n                <HighTag.IconButton name='menu' />\r\n                Show Me The House\r\n            </SettingContainer>\r\n            <SettingContainer>\r\n                <SearchNav />\r\n                <SettingNav />\r\n            </SettingContainer>\r\n        </Container>\r\n    )\r\n}\r\n\r\nNav.defaultProps = {\r\n\r\n}\r\n\r\nexport default Nav;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport * as HighTag from 'components/molecules'\r\n\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: rows;\r\n    flex-wrap: wrap;\r\n    > * {\r\n        margin: 2px 2px 2px 2px;\r\n    }\r\n`\r\nconst ContainerIcons = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    > * {\r\n        margin: 2px 2px 2px 2px;\r\n    }\r\n`\r\n\r\nconst ContainerAnaly = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    > * {\r\n        margin: 2px 2px 2px 2px;\r\n    }\r\n`\r\n\r\nfunction AnalyMenu({icons, ...other}){\r\n    return (\r\n        <Container>\r\n            <ContainerIcons>\r\n                {icons.map( (x,i) => <HighTag.IconButton key={i} name={x} />)}\r\n            </ContainerIcons>\r\n            <ContainerAnaly>\r\n                <HighTag.CardTradeTable />\r\n                <HighTag.LineChart />\r\n                {/* <HighTag.PieChart />\r\n                <HighTag.BarChart /> */}\r\n            </ContainerAnaly>\r\n        </Container>\r\n    )\r\n}\r\nAnalyMenu.defaultProps = {\r\n    icons: ['table_chart', 'show_chart', 'pie_chart', 'insert_chart']\r\n}\r\n\r\nexport default AnalyMenu;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport * as HighTag from 'components/molecules'\r\n\r\nconst Container = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    > * {\r\n        margin: 2px 2px 2px 2px;\r\n    }\r\n`\r\nfunction ControlButton({icons, ...other}){\r\n    return (\r\n        <Container>\r\n            {icons.map( x => <HighTag.IconButton name={x} />)}\r\n        </Container>\r\n    )\r\n}\r\nControlButton.defaultProps = {\r\n    icons: ['add', 'remove',]\r\n}\r\n\r\nexport default ControlButton;","import React from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport * as HighTag from 'components/molecules'\r\nimport * as Item from 'components/organisms'\r\n\r\n// const boxFade = keyframes`\r\n//   from {\r\n//     width: 0%;\r\n//   }\r\n//   to {\r\n//     width: 100%;\r\n//   }\r\n// `\r\nconst Container = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n    flex-wrap: row wrap;\r\n    align-items: center;\r\n    padding: 0px 0px 0px 0px;\r\n`\r\n\r\nconst ContainerNav = styled.div`\r\n    width : 100%;\r\n    height : 50px;\r\n    background: white;\r\n    z-index: 1;\r\n`\r\nconst ContainerContents = styled.div`\r\n    display: flex;\r\n    width : 100%;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n    flex-direction: rows;\r\n    flex-wrap: wrap;\r\n    margin: 10px 0 0 0;\r\n    pointer-events: none;\r\n    z-index: 1;\r\n`\r\n\r\nconst ContainerAnaly = styled.div`\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    align-items: center;\r\n    flex-direction: rows;\r\n    flex-wrap: wrap;\r\n    pointer-events: auto;\r\n    z-index: 1;\r\n`\r\n\r\n\r\n\r\n\r\nfunction Template() {\r\n    return(\r\n        <Container>\r\n            <HighTag.ControlMap />\r\n\r\n            <ContainerNav>\r\n                <Item.Nav />\r\n            </ContainerNav>\r\n            <ContainerContents>\r\n                <ContainerAnaly>\r\n                    <Item.AnalyMenu />\r\n                </ContainerAnaly>\r\n            </ContainerContents>\r\n\r\n            {/* <button onClick={Apis.setCenter}></button> */}\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Template;","import React from 'react'\r\nimport { Template } from './template'\r\n\r\nfunction Page() {\r\n    return (\r\n        <Template/>\r\n    )\r\n};\r\nexport default Page;","import React from 'react';\r\nimport './App.css';\r\nimport { MainPage } from './pages'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MainPage/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","export const EXAMPLE = \"@template/example\"","import * as types from './types'\r\n\r\nconst init = {\r\n    stateExample: \"null\",\r\n}\r\n\r\nfunction reducer(state=init, action){\r\n    switch(action.type){\r\n        case types.EXAMPLE:\r\n            console.log(\"reducer : success\")\r\n            return {\r\n                ...state,\r\n                stateExample: action.payload,\r\n            }\r\n        default:\r\n            return { ...state }\r\n            \r\n    }\r\n}\r\n\r\nexport default reducer;","import * as types from './types'\r\n\r\nconst init = {\r\n    tradeTableData : [],\r\n    tradeMeanChartData : [],\r\n}\r\nfunction reducer(state=init, action){\r\n    switch(action.type){\r\n        case types.UPDATE_TRADE_TABLE:\r\n            return {\r\n                ...state,\r\n                tradeTableData: action.payload,\r\n            }\r\n\r\n        case types.UPDATE_TRADE_MEAN_CHART:\r\n            return {\r\n                ...state,\r\n                tradeMeanChartData: action.payload,\r\n            }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default reducer;","import { combineReducers } from 'redux'\r\nimport { reducer as template } from './Template'\r\nimport { reducer as map } from './Map'\r\nimport { reducer as analyzer } from './Analyzer'\r\n\r\nconst rootReducer = combineReducers({\r\n    template,\r\n    map,\r\n    analyzer,\r\n})\r\nexport default rootReducer;","import { all, fork } from 'redux-saga/effects'\r\nimport { sagas as templateSaga } from './Template'\r\nimport { sagas as mapSaga } from './Map'\r\nimport { sagas as analyzerSaga } from './Analyzer'\r\n\r\nfunction combineSagas(...sagas) {\r\n    return function* rootSaga(){\r\n        yield all(sagas.reduce( (prevSagas, saga) => [\r\n            ...prevSagas,\r\n            ...Object.keys(saga).map( key => fork(saga[key]))\r\n            ] , [])\r\n        )\r\n    }\r\n}\r\n\r\nexport default combineSagas(\r\n    templateSaga,\r\n    mapSaga,\r\n    analyzerSaga,\r\n)","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n//redux\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from 'ducks/reducer';\r\nimport rootSaga from 'ducks/saga';\r\nimport { Provider } from 'react-redux';\r\n\r\n//const devTools = window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst devTools = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst makedStore = (init) =>{\r\n  const store = createStore(\r\n    rootReducer, \r\n    init, \r\n    devTools(\r\n      applyMiddleware(sagaMiddleware),\r\n    ),\r\n  )\r\n  sagaMiddleware.run(rootSaga);\r\n  return store;\r\n}\r\n\r\nReactDOM.render(\r\n    <Provider store={makedStore()}>\r\n        <App />\r\n    </Provider>, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}