{"version":3,"sources":["ducks/Map/actions.js","ducks/Map/constants.js","ducks/Map/reducer.js","components/Map.js","components/TradeTable.js","components/ChartCard.js","components/main.js","App.js","serviceWorker.js","ducks/redux.js","index.js"],"names":["setData","data","type","payload","initState","reducer","state","action","CustomMap","styled","div","connect","map","mapActions","props","useState","tmp","setTmp","setkakaoMap","useEffect","getAptUniqueInfo","el","document","getElementById","positions","title","apt_name","latlng","kakao","maps","LatLng","latitudes","longitude","road_city_code","road_code","imageSize","Size","markerImage","MarkerImage","kamap","Map","center","i","length","marker","uniqueKey","event","addListener","getAptInfo","Marker","position","image","content","axios","get","then","response","info","catch","error","console","log","post","Fragment","className","id","pad","n","width","Array","join","dataName","dataLists","x","ymd","trade_year","trade_month","trade_day","value","trade_value","area","dedicated_area","maxBodyHeight","style","height","zIndex","columns","field","options","filtering","pageSize","pageSizeOptions","search","showFirstLastPageButtons","sorting","ChartCard","chart","xaxis","categories","series","name","this","Component","RootDiv","MenuDiv","MainDiv","ContentsDiv","MapDiv","InfoDiv","AnalyDiv","CustomMenu","App","Boolean","window","location","hostname","match","combineReducers","devTools","__REDUX_DEVTOOLS_EXTENSION__","store","createStore","rootReducer","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f33b0599.chunk.js","sourcesContent":["import * as types from './constants'\r\n\r\nexport const setData = data => ({\r\n    type: types.SET_DATA_LIST,\r\n    payload: data,\r\n})","export const SET_DATA_LIST = '@map/SET_DATA_LIST';","import * as types from './constants';\r\n\r\nconst initState = {\r\n    data: [],\r\n}\r\n\r\n\r\nfunction reducer(state = initState, action){\r\n    switch(action.type){\r\n        case types.SET_DATA_LIST:\r\n            return {\r\n                ...state,\r\n                data: action.payload,\r\n            }\r\n        default: \r\n            return { ...state }\r\n    }\r\n\r\n}\r\n\r\nexport default reducer;","import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\n//Redux\r\nimport { connect } from 'react-redux';\r\nimport { actions as mapActions } from '../ducks/Map';\r\n\r\ndeclare var kakao:any;\r\n\r\nconst CustomMap = styled.div`\r\n    width: 700px;\r\n    height: 660px;\r\n    border: 0px dotted;\r\n    border-radius: 15px;\r\n    z-index: 0;\r\n`\r\n\r\nfunction Map(props){\r\n    const { data } = props // state\r\n    const { setData } = props // actions\r\n\r\n    const [tmp, setTmp] = useState([]);\r\n    const [kakaoMap, setkakaoMap] = useState();\r\n    const [dataList, setdataList] = useState([]);\r\n    \r\n    useEffect(()=>{\r\n        getAptUniqueInfo()\r\n    },[])\r\n\r\n\r\n    useEffect(()=>{\r\n        const el = document.getElementById('map');\r\n        \r\n        const positions = tmp.map( data => ({ \r\n            title: data.apt_name,\r\n            latlng: new kakao.maps.LatLng(data.latitudes, data.longitude),\r\n            road_city_code: data.road_city_code,\r\n            road_code: data.road_code,\r\n        }))\r\n         \r\n        var imageSrc = \"http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\"; \r\n        var imageSize = new kakao.maps.Size(24, 35);\r\n          \r\n        // 마커의 이미지정보를 가지고 있는 마커이미지를 생성합니다\r\n        var markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize)\r\n    \r\n        var kamap = new kakao.maps.Map(el, {\r\n            center: new kakao.maps.LatLng(37.563642596447494, 127.0260017409586),\r\n        });\r\n    \r\n        for(var i = 0; i < positions.length; i ++) {\r\n            var marker = new kakao.maps.Marker({\r\n                map: kamap, // 마커를 표시할 지도\r\n                position: positions[i].latlng,\r\n                title : positions[i].title,\r\n                image : markerImage,  \r\n                content: positions[i].road_city_code, \r\n    \r\n            });\r\n            var uniqueKey = ({\r\n                road_city_code: positions[i].road_city_code,\r\n                road_code : positions[i].road_code,\r\n            });\r\n\r\n            (function(marker, uniqueKey) {\r\n                kakao.maps.event.addListener(marker, 'click', function() {\r\n                    getAptInfo(uniqueKey)\r\n                });\r\n            })(marker, uniqueKey);\r\n\r\n        }\r\n        setkakaoMap(kamap)\r\n    },[tmp])\r\n\r\n\r\n    const getAptUniqueInfo=()=>{\r\n        axios.get(\"http://34.84.195.184:3691/data-warehouse/apt-unique-info\")\r\n        .then(response => setTmp(response.data.info))\r\n        .catch(error => console.log(error))\r\n    }\r\n\r\n    const getAptInfo=(uniqueKey)=>{\r\n        axios.post(\"http://34.84.195.184:3691/data-warehouse/apt-unique-info/apt-info\", uniqueKey)\r\n        .then(response => setData(response.data.info))\r\n        .catch(error => console.log(error))\r\n    }\r\n   \r\n    return (\r\n        <React.Fragment>\r\n            <CustomMap className='Map' id=\"map\" />\r\n\r\n        </React.Fragment>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => state.map,\r\n    mapActions\r\n)(Map);\r\n//export default Map;","import React from 'react';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux'\r\n\r\n// Material-UI\r\nimport MaterialTable from 'material-table';\r\n\r\nfunction pad(n, width) {\r\n    n = n + '';\r\n    return n.length >= width ? n : new Array(width - n.length + 1).join('0') + n;\r\n  }\r\n\r\n\r\nfunction TradeTable(props){\r\n    const { data } = props;\r\n\r\n    let dataName = \"\";\r\n    if (data.length > 0){\r\n        dataName = data[0].apt_name;\r\n    }\r\n    const dataLists = data.map( x => \r\n        ({\r\n            ymd: x.trade_year+\"-\"+pad(x.trade_month, 2)+\"-\"+pad(x.trade_day, 2),\r\n            value: x.trade_value,\r\n            area: x.dedicated_area,\r\n        }))\r\n\r\n    return (\r\n       \r\n            <MaterialTable\r\n            maxBodyHeight='660px'\r\n            style={{ width: '380px', height: '660px', zIndex: 0}}\r\n            title={dataName}\r\n            columns={[\r\n                { title: 'Date', field: 'ymd' },\r\n                { title: 'Price', field: 'value' },\r\n                { title: 'Area', field: 'area' },\r\n            ]}\r\n            data={dataLists}\r\n            options={{\r\n                filtering: false,\r\n                pageSize:8,\r\n                pageSizeOptions: [8],\r\n                search: false,\r\n                showFirstLastPageButtons: false,\r\n                sorting: true,\r\n              }}      \r\n            />\r\n    )\r\n}\r\n\r\n\r\nexport default connect(\r\n    state => state.map,\r\n    null\r\n)(TradeTable)\r\n\r\n","import React, { Component } from 'react';\r\nimport Chart from 'react-apexcharts'\r\n\r\n\r\nclass ChartCard extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        options: {\r\n          chart: {\r\n            id: 'apexchart-example'\r\n          },\r\n          xaxis: {\r\n            categories: [1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998]\r\n          }\r\n        },\r\n        series: [{\r\n          name: 'series-1',\r\n          data: [30, 40, 45, 50, 49, 60, 70, 91]\r\n        }]\r\n      }\r\n    }\r\n    render() {\r\n      return (\r\n        <Chart options={this.state.options} series={this.state.series} type=\"bar\" width={500} height={320} />\r\n      )\r\n    }\r\n  }\r\n\r\n\r\nexport default ChartCard;","// Standard\r\nimport React from 'react';\r\nimport styled from 'styled-components';\r\n\r\n// Custom\r\nimport Map from './Map';\r\nimport TradeTable from './TradeTable';\r\nimport ChartCard from './ChartCard';\r\n\r\n// Redux\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\n\r\nconst RootDiv = styled.div`\r\n    width: 100%;\r\n    min-height: 100vh;\r\n    background: white;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n`\r\nconst MenuDiv = styled.div`\r\n    width: 100%;\r\n    height: 50px;\r\n    background: #000624;\r\n    padding: 0px 0px 0px 20px;\r\n    position: fixed;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n    z-index: 1;\r\n`\r\nconst MainDiv = styled.div`\r\n    width: 100%;\r\n    background: white;\r\n    display: flex;\r\n    justify-content: flex-start;\r\n    flex-direction: column;\r\n`\r\n\r\nconst ContentsDiv = styled.div`\r\n    padding: 70px 0px 0px 0px;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n`\r\n\r\nconst MapDiv = styled.div`\r\n    padding: 10px;\r\n    background: white;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n`\r\n\r\nconst InfoDiv = styled.div`\r\n    background: white;\r\n    padding: 10px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: flex-start;\r\n`\r\nconst AnalyDiv = styled.div`\r\n    width: 100%;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-flow: column wrap;\r\n`\r\nconst CustomMenu = styled.div`\r\n    width: 70px;\r\n    height : 50px;\r\n    background: #ECECF0;\r\n    align-items: center;\r\n    text-align: center;\r\n`\r\n\r\nconst CustomCard = styled.div`\r\n    width: 670px;\r\n    height: 200px;\r\n    background: white;\r\n    border: 1px dotted;\r\n    border-radius: 10px;\r\n    margin: 10px 10px 0px;\r\n    padding: 5px;\r\n`\r\n// const ChartCard = styled.div`\r\n//     width: 1400px;\r\n//     height: 400px;\r\n//     background: white;\r\n//     border: 1px dotted;\r\n//     border-radius: 10px;\r\n//     padding: 10px 0px 0px 0px;\r\n// `\r\n\r\n\r\n\r\nfunction MainView(props){\r\n    const { data } = props; // state\r\n    console.log(data)\r\n \r\n    return (\r\n        <RootDiv>\r\n            <MenuDiv>\r\n                <CustomMenu> Menu </CustomMenu>\r\n            </MenuDiv>\r\n            <MainDiv>\r\n                <ContentsDiv>\r\n                    <MapDiv>\r\n                        <Map></Map>\r\n                    </MapDiv>\r\n                    <InfoDiv>\r\n                        <TradeTable/>\r\n                    </InfoDiv>\r\n                </ContentsDiv>\r\n                <AnalyDiv>\r\n                    <ChartCard></ChartCard>\r\n                </AnalyDiv>\r\n            </MainDiv>\r\n        </RootDiv>\r\n    )\r\n}\r\n\r\nexport default connect(\r\n    state => state.map,\r\n    null\r\n)(MainView)\r\n//export default MainView;","import React from 'react';\r\nimport './App.css';\r\nimport MainView from './components/main';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MainView></MainView>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as map } from './Map';\r\n\r\nexport default combineReducers({\r\n    map,\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { createStore } from 'redux';\r\nimport rootReducer from './ducks/redux';\r\nimport { Provider } from 'react-redux' ;\r\n\r\n\r\nconst devTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\nconst store = createStore(rootReducer, devTools);\r\n\r\n\r\nReactDOM.render( \r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}